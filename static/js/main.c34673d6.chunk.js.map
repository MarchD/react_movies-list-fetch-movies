{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/movies.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","Title","Poster","imdbID","Plot","loader","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","wait","delay","Promise","resolve","setTimeout","getMovie","title","a","fetch","response","json","FindMovie","onAdd","error","setError","useState","value","setValue","setMovie","setLoading","htmlFor","type","id","onChange","target","placeholder","classnames","onClick","then","data","Error","App","setMovies","length","newMovie","some","current","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c34673d6.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  Title,\n  Poster,\n  imdbID,\n  Plot,\n  loader,\n}) => (\n  <div className=\"card\">\n    {!loader && (\n      <>\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3\">\n            <img\n              src={Poster}\n              alt=\"Film logo\"\n            />\n          </figure>\n        </div>\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-left\">\n              <figure className=\"image is-48x48\">\n                <img\n                  src=\"images/imdb-logo.jpeg\"\n                  alt=\"imdb\"\n                />\n              </figure>\n            </div>\n            <div className=\"media-content\">\n              <p className=\"title is-8\">{Title}</p>\n            </div>\n          </div>\n\n          <div className=\"content\">\n            {Plot}\n            <br />\n            <a href={`https://www.imdb.com/title/${imdbID}`}>IMDB</a>\n          </div>\n        </div>\n      </>\n    )}\n  </div>\n);\n\nMovieCard.propTypes = {\n  Title: PropTypes.string.isRequired,\n  Poster: PropTypes.string.isRequired,\n  imdbID: PropTypes.string.isRequired,\n  Plot: PropTypes.string,\n  loader: PropTypes.bool.isRequired,\n};\n\nMovieCard.defaultProps = {\n  Plot: '',\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies,\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbID} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbID: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const BASE_URL = 'http://www.omdbapi.com/?apikey=b6667533';\n\nconst wait = delay => new Promise(resolve => setTimeout(resolve, delay));\n\nexport const getMovie = async(title) => {\n  const response = await fetch(`${BASE_URL}&t=${title}`);\n\n  await wait(100);\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\nimport classnames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/movies';\n\nexport const FindMovie = ({ onAdd, error, setError }) => {\n  const [value, setValue] = useState('');\n  const [movie, setMovie] = useState('');\n\n  const [loader, setLoading] = useState(false);\n\n  const handleSearch = ({ target }) => {\n    setError(false);\n    setValue(target.value);\n  };\n\n  const searchMovie = () => {\n    setLoading(true);\n    getMovie(value).then((data) => {\n      if (data.Error) {\n        setError(true);\n        setMovie(null);\n        setLoading(false);\n\n        return;\n      }\n\n      setMovie(data);\n      setLoading(false);\n    });\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={value}\n              onChange={handleSearch}\n              placeholder=\"Enter a title to search\"\n              className={classnames('input', { 'is-danger': error })}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className={\n                classnames('button', 'is-light', { 'is-loading': loader })}\n              onClick={searchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (movie) {\n                  onAdd(movie);\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && (<MovieCard {...movie} loader={loader} />)}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n  error: PropTypes.bool.isRequired,\n  setError: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(false);\n\n  const addNewMovie = (newMovie) => {\n    if (movies.some(movie => movie.imdbID === newMovie.imdbID)\n    || error) {\n      return;\n    }\n\n    setMovies(current => [...current, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        {movies.length ? (\n          <MoviesList movies={movies} />\n        ) : (\n          <div className=\"panel-heading\">No movies</div>\n        )}\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addNewMovie} error={error} setError={setError} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}